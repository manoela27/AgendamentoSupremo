@model AgendamentoApp.Entidade.Cargo
@{
    ViewData["Title"] = "Editar Cargo";
    var funcionarios = ViewBag.Funcionarios as List<SelectListItem>;
}

<div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
        <div class="bg-white shadow rounded-lg p-6">
            <div class="px-4 sm:px-6">
                <h1 class="text-2xl font-semibold text-gray-900">Editar Cargo</h1>
                <p class="mt-1 text-sm text-gray-600">
                    Atualize as informações do cargo conforme necessário.
                </p>
            </div>

            <div class="mt-6">
                <form method="post" class="space-y-6">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" />

                    <div class="grid grid-cols-1 gap-y-6 gap-x-4">
                        <div>
                            <label for="Nome" class="block text-sm font-medium text-gray-700">Nome do Cargo</label>
                            <div class="mt-1">
                                <input type="text" name="Nome" id="Nome" value="@Model.Nome" required
                                       class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                       placeholder="Ex: Cabeleireiro, Manicure, etc.">
                            </div>
                        </div>

                        <div>
                            <label for="Descricao" class="block text-sm font-medium text-gray-700">Descrição</label>
                            <div class="mt-1">
                                <textarea id="Descricao" name="Descricao" rows="3" required
                                          class="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                          placeholder="Descreva as principais responsabilidades e atribuições do cargo">@Model.Descricao</textarea>
                            </div>
                            <p class="mt-2 text-sm text-gray-500">
                                Breve descrição das responsabilidades e atribuições do cargo.
                            </p>
                        </div>

                        <div>
                            <label for="FuncionariosDropdown" class="block text-sm font-medium text-gray-700">Funcionários</label>
                            <div class="relative mt-1">
                                <button type="button" id="FuncionariosDropdown" class="w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-pointer sm:text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                                    <span id="selectedCount">Nenhum selecionado</span>
                                    <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                                        <i class="fas fa-chevron-down text-gray-500"></i>
                                    </span>
                                </button>

                                <div id="optionsContainer" class="absolute mt-1 w-full rounded-md bg-white shadow-lg border border-gray-300 z-10 hidden max-h-60 overflow-auto">
                                    @foreach (var funcionario in funcionarios)
                                    {
                                        var selected = Model.Funcionarios?.Any(f => f.Id == funcionario.Value) == true ? "checked" : "";
                                        <label class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer">
                                            <input type="checkbox" class="funcionario-checkbox mr-2" value="@funcionario.Value" @selected />
                                            @funcionario.Text
                                        </label>
                                    }
                                </div>
                            </div>
                            <button type="button" id="deselecionarTodos" class="mt-2 text-sm text-blue-600 hover:underline">Desvincular todos</button>
                            <div id="hiddenInputs"></div>
                        </div>
                    </div>

                    @if (!ViewContext.ModelState.IsValid)
                    {
                        <div class="rounded-md bg-red-50 p-4">
                            <div class="flex">
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-red-800">
                                        Ocorreram erros ao processar sua solicitação:
                                    </h3>
                                    <div class="mt-2 text-sm text-red-700">
                                        @Html.ValidationSummary(false)
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="flex justify-end space-x-3">
                        <a href="@Url.Action("ListarCargos")"
                           class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Cancelar
                        </a>
                        <button type="submit"
                                class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Salvar Alterações
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const dropdownBtn = $("#FuncionariosDropdown");
            const optionsContainer = $("#optionsContainer");
            const selectedCount = $("#selectedCount");
            const hiddenInputs = $("#hiddenInputs");

            dropdownBtn.on("click", function () {
                optionsContainer.toggleClass("hidden");
            });

            $(document).on("change", ".funcionario-checkbox", function () {
                updateSelected();
            });

            function updateSelected() {
                const selected = $(".funcionario-checkbox:checked");
                const count = selected.length;
                selectedCount.text(count > 0 ? `${count} selecionado${count > 1 ? 's' : ''}` : "Nenhum selecionado");
                hiddenInputs.empty();
                selected.each(function () {
                    hiddenInputs.append(`<input type="hidden" name="FuncionariosIds" value="${$(this).val()}" />`);
                });
            }

            // Inicializa o contador ao carregar a página
            updateSelected();

            // Deselecionar todos os checkboxes
            $("#deselecionarTodos").click(function () {
                $(".funcionario-checkbox").prop("checked", false);
                updateSelected();
            });
        });
    </script>
}
